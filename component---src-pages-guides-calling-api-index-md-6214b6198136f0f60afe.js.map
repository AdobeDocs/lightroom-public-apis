{"version":3,"sources":["webpack://lightroom-public-api/./src/pages/guides/calling_api/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"6RAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,2BADR,4BAGA,2EAA4D,eAAIC,WAAW,KAAf,WAA5D,uBAAsH,eAAIA,WAAW,KAAf,eAAtH,iKAA8T,eAAIA,WAAW,KAAf,gBAA9T,MACA,0DAA2C,uBAAYA,WAAW,KAAvB,aAA3C,8EAA8K,uBAAYA,WAAW,KAAvB,yBAA9K,aACA,+DACA,qBAAK,iBAAMA,WAAW,OAAjB,uIAIL,sDACA,qBAAK,iBAAMA,WAAW,OAAjB,kNAOL,eACE,GAAM,gBADR,iBAGA,2FAA4E,eAAIA,WAAW,KAAf,YAA5E,MAAsH,eAAIA,WAAW,KAAf,YAAtH,MAAgK,eAAIA,WAAW,KAAf,UAAhK,UAA4M,eAAIA,WAAW,KAAf,UAA5M,uCAAqR,eAAIA,WAAW,KAAf,QAArR,2EAAgY,eAAIA,WAAW,KAAf,4BAAhY,wEAA4f,eAAIA,WAAW,KAAf,uBAA5f,OACA,eACE,GAAM,iBADR,kBAGA,uEAAwD,uBAAYA,WAAW,KAAvB,cAAxD,qHACA,qGACA,qBAAK,iBAAMA,WAAW,OAAjB,iMASTJ,EAAWK,gBAAiB","file":"component---src-pages-guides-calling-api-index-md-6214b6198136f0f60afe.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/lightroom-public-apis/lightroom-public-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"calling-a-lightroom-api\"\n    }}>{`Calling a Lightroom API`}</h1>\n    <p>{`As described elsewhere, applications must acquire an `}<em parentName=\"p\">{`API key`}</em>{` by registering an `}<em parentName=\"p\">{`integration`}</em>{` as an Adobe partner. Using the API key to authenticate a Lightroom customer with the Adobe Identity Management System enables the application to acquire an `}<em parentName=\"p\">{`access token`}</em>{`.`}</p>\n    <p>{`The API key must be included in the `}<inlineCode parentName=\"p\">{`X-API-Key`}</inlineCode>{` header in every API call, while the access token must be included in the `}<inlineCode parentName=\"p\">{`Authorization: Bearer`}</inlineCode>{` header.`}</p>\n    <p>{`Sample cURL for calling an API might be:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`key=ClientAPIKey\ntoken=eyJ4NXUi...\ncurl -H \"X-API-Key: \\${key}\" -H \"Authorization: Bearer \\${token}\" https://lr.adobe.io/v2/...\n`}</code></pre>\n    <p>{`and sample JavaScript might be:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`var key='ClientAPIKey'\nvar token='eyJ4NXUi...'\nvar xhr = new XMLHttpRequest()\nxhr.open('GET', apiURL)\nxhr.setRequestHeader('X-API-Key', key)\nxhr.setRequestHeader('Authorization', \\`Bearer \\${token}\\`)\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"content-type\"\n    }}>{`Content Type`}</h3>\n    <p>{`Lightroom content is encapsulated in a variety of objects, including `}<em parentName=\"p\">{`accounts`}</em>{`, `}<em parentName=\"p\">{`catalogs`}</em>{`, `}<em parentName=\"p\">{`assets`}</em>{`, and `}<em parentName=\"p\">{`albums`}</em>{`. The content type of every API is `}<em parentName=\"p\">{`JSON`}</em>{`, with the exception of the APIs that handle binary data (content type `}<em parentName=\"p\">{`application/octet-stream`}</em>{`) and those that handle external XMP Develop Settings (content type `}<em parentName=\"p\">{`application/rdf+xml`}</em>{`).`}</p>\n    <h3 {...{\n      \"id\": \"handling-json\"\n    }}>{`Handling JSON`}</h3>\n    <p>{`Returned JSON content is always prepended with a `}<inlineCode parentName=\"p\">{`while(1){}`}</inlineCode>{` clause to mitigate abuse. This clause must be stripped by client applications before using the incoming result.`}</p>\n    <p>{`Sample JavaScript for eliding the preface and constructing an object might be:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`function _processJSONResponse(response) {\n    let while1Regex = /^while\\\\s*\\\\(\\\\s*1\\\\s*\\\\)\\\\s*{\\\\s*}\\\\s*/\n    return response ? JSON.parse(response.replace(while1Regex, '')) : null\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}