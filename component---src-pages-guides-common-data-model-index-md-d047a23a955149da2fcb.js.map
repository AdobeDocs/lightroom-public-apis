{"version":3,"sources":["webpack://lightroom-public-api/./src/pages/guides/common_data_model/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"4RAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,0BADR,2BAGA,2KACA,qBAAK,iBAAMC,WAAW,OAAjB,+jBAoBL,0JACA,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,QAApB,uJACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,MAApB,gLACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,WAApB,wEACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,WAApB,+EACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,QAApB,iDACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,WAApB,qKACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,WAApB,yEACE,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAf,iFACA,eAAIA,WAAW,MAAf,kGACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,eAApB,4FACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,eAApB,0VAGJ,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,SAApB,oCACE,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAf,wCAA4D,uBAAYA,WAAW,MAAvB,QAA5D,iCACA,eAAIA,WAAW,MAAf,0BAA8C,uBAAYA,WAAW,MAAvB,QAA9C,WACA,eAAIA,WAAW,MAAf,iDAQVJ,EAAWK,gBAAiB","file":"component---src-pages-guides-common-data-model-index-md-d047a23a955149da2fcb.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/lightroom-public-apis/lightroom-public-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"common-json-data-model\"\n    }}>{`Common JSON Data Model`}</h1>\n    <p>{`The data models for all JSON content share many common elements. Long strings, unique identifiers, and URLs have been truncated here for legibility.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n    \"base\": \"https://lr.adobe.io/v2/catalogs/9479135e/\",\n    \"id\": \"a3c679e3\",\n    \"created\": \"2012-01-03T04:54:32.884643Z\",\n    \"updated\": \"2012-01-03T04:54:32.884643Z\",\n    \"type\": \"custom for each type\",\n    \"subtype\": \"custom for each type\",\n    \"payload\": {\n        \"userCreated\": \"2012-01-03T04:54:15Z\",\n        \"userUpdated\": \"2012-01-03T04:54:15Z\",\n        // custom for each type\n    },\n    \"links\": {\n        \"self\": {\n            \"href\": \"custom/for/each/type/a3c679e3\"\n        }\n        // additional links custom for each type\n    }\n}\n`}</code></pre>\n    <p>{`Unless otherwise noted, all entries at the top level are constructed and provided by the server and can not be modified by clients.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`base`}</inlineCode>{` (URL): Base URL for any relative HREF values in the data. When items are returned in a list, base will typically not be included with each entry.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`id`}</inlineCode>{` (Lightroom-style UUID): Unique Lightroom identifier of this asset. It is usually generated by client on creation but may be generated by the server in some circumstances.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`created`}</inlineCode>{` (ISO 8601 date): Date when asset was first uploaded to the server.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`updated`}</inlineCode>{` (ISO 8601 date): Date when asset was most recently revised on the server.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type`}</inlineCode>{` (string): Always the same value for a type.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`subtype`}</inlineCode>{` (string): A different set of legal values is defined for each type. Provided by the client on creation. A subtype is always required for types that support it.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`payload`}</inlineCode>{` (optional, table): Metadata about the object provided by the client.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Values supported within the payload generally differ for each document type.`}</li>\n          <li parentName=\"ul\">{`If the payload is completely empty, which is allowed for some types, then it will be omitted.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`userCreated`}</inlineCode>{` (ISO 8601 date): Date and time when the user created this document on the client side.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`userUpdated`}</inlineCode>{` (ISO 8601 date): Date and time when the user last updated this document's payload (or other user modifiable data). This should be set at initial creation and updated by a client each time a user makes a change to data within the payload hash. The userUpdated time should not be updated by automated processes (e.g. reverse geocode, etc.).`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`links`}</inlineCode>{` (table): Links to related data.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Each entry is a table containing an `}<inlineCode parentName=\"li\">{`href`}</inlineCode>{` entry with the actual link.`}</li>\n          <li parentName=\"ul\">{`All types include the `}<inlineCode parentName=\"li\">{`self`}</inlineCode>{` link.`}</li>\n          <li parentName=\"ul\">{`Each type may have other links supported.`}</li>\n        </ul>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}