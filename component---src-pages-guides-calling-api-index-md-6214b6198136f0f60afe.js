(self.webpackChunklightroom_public_api=self.webpackChunklightroom_public_api||[]).push([[971],{59035:function(e,n,t){"use strict";t.r(n),t.d(n,{_frontmatter:function(){return m},default:function(){return d}});var a=t(22122),i=t(19756),r=(t(15007),t(64983)),p=t(99536),o=["components"],m={},l={_frontmatter:m},s=p.Z;function d(e){var n=e.components,t=(0,i.Z)(e,o);return(0,r.mdx)(s,(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"calling-a-lightroom-api"},"Calling a Lightroom API"),(0,r.mdx)("p",null,"As described elsewhere, applications must acquire an ",(0,r.mdx)("em",{parentName:"p"},"API key")," by registering an ",(0,r.mdx)("em",{parentName:"p"},"integration")," as an Adobe partner. Using the API key to authenticate a Lightroom customer with the Adobe Identity Management System enables the application to acquire an ",(0,r.mdx)("em",{parentName:"p"},"access token"),"."),(0,r.mdx)("p",null,"The API key must be included in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"X-API-Key")," header in every API call, while the access token must be included in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"Authorization: Bearer")," header."),(0,r.mdx)("p",null,"Sample cURL for calling an API might be:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},'key=ClientAPIKey\ntoken=eyJ4NXUi...\ncurl -H "X-API-Key: ${key}" -H "Authorization: Bearer ${token}" https://lr.adobe.io/v2/...\n')),(0,r.mdx)("p",null,"and sample JavaScript might be:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"var key='ClientAPIKey'\nvar token='eyJ4NXUi...'\nvar xhr = new XMLHttpRequest()\nxhr.open('GET', apiURL)\nxhr.setRequestHeader('X-API-Key', key)\nxhr.setRequestHeader('Authorization', `Bearer ${token}`)\n")),(0,r.mdx)("h3",{id:"content-type"},"Content Type"),(0,r.mdx)("p",null,"Lightroom content is encapsulated in a variety of objects, including ",(0,r.mdx)("em",{parentName:"p"},"accounts"),", ",(0,r.mdx)("em",{parentName:"p"},"catalogs"),", ",(0,r.mdx)("em",{parentName:"p"},"assets"),", and ",(0,r.mdx)("em",{parentName:"p"},"albums"),". The content type of every API is ",(0,r.mdx)("em",{parentName:"p"},"JSON"),", with the exception of the APIs that handle binary data (content type ",(0,r.mdx)("em",{parentName:"p"},"application/octet-stream"),") and those that handle external XMP Develop Settings (content type ",(0,r.mdx)("em",{parentName:"p"},"application/rdf+xml"),")."),(0,r.mdx)("h3",{id:"handling-json"},"Handling JSON"),(0,r.mdx)("p",null,"Returned JSON content is always prepended with a ",(0,r.mdx)("inlineCode",{parentName:"p"},"while(1){}")," clause to mitigate abuse. This clause must be stripped by client applications before using the incoming result."),(0,r.mdx)("p",null,"Sample JavaScript for eliding the preface and constructing an object might be:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"function _processJSONResponse(response) {\n    let while1Regex = /^while\\s*\\(\\s*1\\s*\\)\\s*{\\s*}\\s*/\n    return response ? JSON.parse(response.replace(while1Regex, '')) : null\n}\n")))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-calling-api-index-md-6214b6198136f0f60afe.js.map